./" Manpage for CliFM
.TH man 1 "July 4, 2020" "1.0" "CliFM man page"
.SH NAME
CLIFM - A completely text-based file manager inspired in Arch Linux' KISS principle 
.SH SYNOPSIS
\fBclifm\fR [-aAfFgGhiIlLoOpsuUvx] [-p PATH] [-P PROFILE]
.SH DESCRIPTION
CliFM is a completely text-based file manager able to perform all the basic operations you may expect from any other FM. However, the most salient features of CliFM are: 
  a) The use of short commands and numbers (ELN's), instead of filenames. Type 'o 12', for instance, to open a file with your default text editor or to change to the desired directory. Since numbers could be a bit tricky when it comes to listed files, you can use the TAB key to expand the filename corresponding to the required ELN. With the automatic ELN's expansion feature you can use ELN's with external commands as well. 'diff 12 5', for example, will run 'diff' over the files corresponding to ELN's 12 and 5. Ranges are also accepted, for example: rm 1-12.
  b) Bookmarks: bookmark your favorite directories, and even files, to get easy access to them. Example: type 'bm' to open the bookmarks screen and then simply type a number or a hotkey to access the desired bookmark. 
  c) The Selection Box allows you to drop files and directories from different parts of your filesystem (even from different instances of CliFM) and then operate on them with just one command. Example: select a few files in one instance of the program, and then paste them somewhere else using a second instance.
  d) The directory history function (back and forth) keeps track of all the paths visited by you, so that you can go back and forth to any of them by just typing 'b' or 'f' (Alt-h, Alt-k).
  e) Keyboard shortcuts make it even easier and faster to navigate and operate on your files. For example, instead of typing 'cd ..' to go back to the parent directory, or 'sel *' to select all files in the current directory, you can simply press Alt-u and Alt-a respectivelly.
  f) The quick search function makes it really easy to quickly find the files you are looking for: just type '/search_string', that's all.
  g) It is blazing fast and incredibly lightweigth. With a memory footprint below 5 MiB, it can run on really old hardware. 
 It is so simple that it doesn't require an X session nor any graphical environment at all, being able thus to perfectly run on the linux built-in console and even on a headless machine via a SSH or a telnet session. 
 Because inspired in Arch Linux and its KISS principle, CliFM is fundamentally aimed to be lightweight, fast, and simple. On Arch's notion of simplcity see: \fIhttps://wiki.archlinux.org/index.php/Arch_Linux#Simplicity\fR

CliFM also offers the following features:
  1) FreeDesktop compliant Trash system
  2) Command and directory history function
  3) TAB completion for commands, paths, bookmarks, and profiles
  4) TAB ELN-expansion
  5) Keyboard shortcuts
  6) Wildcards auto-expansion
  7) Braces auto-expansion
  8) ELN's auto-expansion
  9) 'sel' keyword auto-expansion
  10) Ranges auto-expansion
  11) Bash-like quoting system
  12) Custom aliases and variables
  13) Customizable colors
  14) Shell commands execution
  15) User profiles
  16) Commands sequential and conditional execution
  17) Resource opener

.SH OPTIONS
.TP
.B -a, --no-hidden
do not show hidden files
.TP
.B -A, --show-hidden
show hidden files (default)
.TP
.B -f, --no-folders-first
do not list folders first
.TP
.B -F, --folders-first
list folders first (default)
.TP
.B -g, --pager
enable the pager
.TP
.B -G, --no-pager
disable the pager (default)
.TP
.B -h, --help
show this help and exit
.TP
.B -i, --no-case-sensitive
no case-sensitive files listing (default)
.TP
.B -I, --case-sensitive
case-sensitive files listing
.TP

.B -l, --no-long-view
disable long view mode (default)
.TP
.B -L, --long-view
enable long view mode
.TP
.B -l, --no-list-on-the-fly
\'cd\' works as the built-in 'cd'
.TP
.B -L, --list-on-the-fly
\'cd\' lists files on the fly (default)
.TP
.B -p, --path PATH
use PATH as CliFM starting path. Default starting path is current working directory
.TP
.B -P, --profile PROFILE
use (or create) PROFILE as profile. Default profile is 'default'
.TP
.B -i, --no-case-sensitive
no case-sensitive files listing (default)
.TP
.B -s, --splash
enable the splash screen
.TP
.B -u, --no-unicode
disable unicode
.TP
.B -U, --unicode
enable unicode to correctly list filenames containing accents, tildes, umlauts, non-latin letters, etc. This option is enabled by default for non-english locales
.TP
.B -v, --version
show version details and exit
.TP
.B -x, --ext-cmds
allow the use of external commands

Arguments precedence order: 1) command line; 2) configuration file; 3) default options.

.SH COMMANDS
\fBNOTE:\fR ELN = Element List Number. Example: in the line "12 openbox" (when listing files), 12 is the ELN corresponding to the file named "openbox".
.TP
\fBNOTE 2:\fR For each of the commands below (internal commands) you can use the semicolon to execute them sequentially and/or the double ampersand to execute them conditionally. Example: 'cmd1; cmd2 && cmd3'. 
.TP
Bear in mind that, whenever at least one internal command is involved in a chained list of commands, CliFM will take care of executing them (simply because the system shell isn't able to understand any of these commands), so that no shell inter-process function (like pipes), nor any stream redirection or shell expression (like IF blocks or FOR loops) will be available. However, the shell is still used to run single external commands found in the chained list, but in isolation from the remaining commands in this list.
.TP
As a rule of thumb, when using chained commands make sure to always expand ELN's to avoid undesired consequences. If, for instance, you issue this command: 'touch aaa && r 3', you will end up deleting a file you were not intended to delete, simple because after the successfull execution of the first command, the ELN 3 corresponds now to a different file.

.TP
.B /* [DIR]
this is the quick search function. Just type '/' followed by the string you are looking for (you can use wildcards), and CliFM will list all the matches in the current working directory. To search for files in any other directory, specify the directory name as second argument. This argument (DIR) could be an absolute path, a relative path, or an ELN.
.TP
.B bm, bookmarks [a, add PATH] [d, del] [edit] [shortcut, name]
with no argument, open the bookmarks menu. Here you cd into the desired bookmark by entering either its ELN, its shortcut, or its name. In this screen you can also add, remove or edit your bookmarks by simply typing 'e' to edit the bookmarks file (which is simply a list of lines with this format: [shortcut]name:path. Ex: [d]documents:/home/user/documents). If you want to add or remove a bookmark directly from the command line, use the 'a' and 'd' arguments respectivelly. Example: 'bm a /media/misc' or 'bm d'. You can also open a bookmark by typing 'bm shortcut' or 'bm name' (in which case TAB completion is available).
.TP
.B o, open [ELN/FILE] [APPLICATION]
open either a directory or a file. For example: 'o 12' or 'o filename'. By default, the 'open' function will open files with the default application associated to them (via the mime built-in function). However, if you want to open a file with a different application, just add the application name as second argument, e.g. 'o 12 leafpad'. If you want to run the program in the background, simply add the ampersand character: 'o 12 &'. When it comes to directories, 'open' works just like the 'cd' command.
.TP
.B cd [ELN/DIR]
when used with no argument, it changes the current directory to the default directory (HOME). Otherwise, 'cd' changes the current directory to the one specified by the first argument. You can use either ELN's or a string to indicate the directory you want. Ex: 'cd 12' or 'cd ~/media'. Unlike the shell 'cd' command, CliFM's built-in 'cd' function doesn not only changes the current directory, but also lists its content (provided the option "cd lists automatically" is enabled, which is the default) according to a comprehensive list of color codes. By default, the output of 'cd' is much like this shell command: cd DIR && ls -A --color=auto --group-directories-first
.TP
.B s, sel [ELN ELN-ELN FILE ... n]
send one or multiple elements (either files or directories) to the Selection Box. 'Sel' accepts individual elements, range of elements, say 1-6, filenames and paths, just as wildcards. Ex: sel 1 4-10 file* filename /path/to/filename.
.TP
.B sb, selbox
show the elements contained in the Selection Box.
.TP
.B ds, desel [*, a, all]
deselect one or more selected elements. You can also deselect all selected elements at once by passing '*', 'a' or 'all' to the function.
.TP
.B t, tr, trash  [ELN/FILE ... n] [ls, list] [clear] [del, rm]
with no argument (or by passing the 'ls' option), it prints a list of currently trashed files. The 'clear' option removes all files from the trash can, while the 'del' option lists trashed files allowing you to remove one or more of them. The trash directory is $XDG_DATA_HOME/Trash, that is, '~/.local/share/Trash'. Since this trash system follows the freedesktop specification, it is able to handle files trashed by different Trash implementations.
.TP
.B u, undel, untrash [*, a, all]
print a list of currently trashed files allowing you to choose one or more of these files to be undeleted, that is to say, restored to their original location. You can also undelete all trashed files at once using the '*', 'a' or 'all' option.
.TP
.B b, back [h, hist] [clear] [!ELN]
unlike 'cd ..', which will send you to the parent directory of the current directory, this command (with no argument) will send you back to the previously visited directory. CliFM keeps a record of all the visited directories. You can see this list by typing 'b hist', 'b h' or 'bh', and you can access any element in this list by simply passing the corresponding ELN in this list to the 'back' command. Example:
        [user@hostname] ~ $ bh
        1 /home/user
        2 /etc
        3 /proc
        [user@hostname] ~ $ b !3
        [user@hostname] /proc $ 

\fBNote:\fR the line printed in green indicates the current position of the back function in the directory history list.
  Finally, you can also clear this history list by typing 'b clear'.
.TP
.B f, forth [h, hist] [clear] [!ELN]
it works just like the back function, but it goes forward in the history record. Of course, you can use 'f hist', 'f h', 'fh', and 'f !ELN'.
.TP
.B c, l, m, md, r
short for 'cp', 'ln', 'mv', 'mkdir', and 'rm' commands respectivelly.
.TP
.B pr, prop, ELN/FILE ... n [a, all] [s, size]
print file properties of FILENAME(s). Use 'all' to list properties of all files in the current working directory, and 'size' to list their corresponding sizes.
.TP
.B mm, mime [info ELN/FILENAME] [edit]
This is CliFM's resource opener. The 'info' option prints the MIME information about ELN/FILENAME: its MIME type, its file extension, if any, and the application associated to this MIME type or file extension. The 'edit' option allows you to edit and customize the MIME list file. So, if a file has no default associated application, first get its MIME info or its file extension, and then add a value for it to the MIME list file using the 'edit' option. Each value in the MIME list file has this format: 'mime_type=application args;application args; ... n' or '*.c=application args;application args; ... n'. Example: 'plain/text=nano' or '*.c=geany -p;leafpad;nano'. CliFM will check the first matching line, and if at least one of the specified applications exists, this one will be used to open the corresponding associated filed. Else, the next matching line will be checked.
.TP
.B ;cmd, :cmd
Skip all CLiFM expansions and send the input string (cmd) as it is to the system shell.
.TP
.B mp, mountpoints
list available mountpoints and change the current working directory into the selected mountpoint.
.TP
.B v, paste [sel] [DESTINY]
the 'paste sel' command will copy the currently selected elements, if any, into the current working directory. If you want to copy these elements into another directory, you only need to tell 'paste' where to copy these files. Ex: paste sel /path/to/directory
.TP
.B pf, prof, profile [set, add, del PROFILE]
with no arguments, prints the name of the currently used profile. To switch, add or delete a profile, use the 'set', 'add', and 'del' options respectivelly followed by the corresponding profile name.
.TP
.B shell [SHELL]
print the current default shell for CliFM or set SHELL as the new default shell. 
.TP
.B msg, messages [clear]
with no arguments, prints the list of messages in the current session. The 'clear' option tells CliFM to empty the messages list.
.TP
.B log [clear]
with no arguments, it shows the log file. If 'clear' is passed as argument, it will delete all the logs.
.TP
.B history [clear] [-n]
with no arguments, it shows the history list. If 'clear' is passed as argument, it will delete all the entries in the history file. Finally, '-n' tells the history command to list only the last 'n' commands in the history list.
You can use the exclamation character (!) to perform some history commands:
  !!: Execute the last command.
  !n: Execute the command number 'n' in the history list.
  !-n: Execute the last-n command in the history list.
.TP
.B edit [APPLICATION]
edit the configuration file. If an application is specified, it will be used to open the configuration file.
.TP
.B alias
show aliases, if any. To write a new alias simpy type 'edit' to open the configuration file and add a line like this: alias alias_name='command_name args...'
.TP
.B splash
show the splash screen.
.TP
.B path, cwd
print the current working directory.
.TP
.B rf, refresh
refresh the screen.
.TP
.B colors
show the color codes used to list files.
.TP
.B cmd, commands 
show this list of commands
.TP
.B hf, hidden [on, off, status]
toggle hidden files on/off.
.TP
.B ff, folders first [on, off, status]
toggle list folders first on/off.
.TP
.B pg, pager [on, off, status]
toggle the pager on/off. Once in the pager, press the Down arrow key or Enter to move downwards one file, or PageDown to move downwards an entire page. To go upwards, use the shortcuts provided by your terminal emulator, for example, A-PageUp or A-Up.
.TP
.B uc, unicode [on, off, status]
toggle unicode on/off.
.TP
.B ext [on, off, status]
toggle external commands on/off.
.TP
.B ver, version
show CliFM version details.
.TP
.B license
Display the license notice.
.TP
.B fs
Print an extract from 'What is Free Software?', written by Richard Stallman.
.TP
.B q, quit, exit, zz
safely quit CliFM.

.SH KEYBOARD SHORTCUTS
.TP
\fBA-c:\fR Clear the current command line buffer
.TP
\fBA-f:\fR Toggle list-folders-first on/off
.TP
\fBC-r:\fR Refresh the screen
.TP
\fBA-l:\fR Toggle long view mode on/off
.TP
\fBA-m:\fR List mountpoints
.TP
\fBA-b:\fR Launch the Bookmarks Manager
.TP
\fBA-i:\fR Toggle hidden files on/off
.TP
\fBA-s:\fR Open the Selection Box
.TP
\fBA-a:\fR Select all files in the current working directory
.TP
\fBA-d:\fR Deselect all selected files
.TP
\fBA-r:\fR Change to the root directory
.TP
\fBA-e:\fR Change to the home directory
.TP
\fBA-u:\fR Change up to the parent directory of the current working directory
.TP
\fBA-j:\fR Change to the previous directory in the directory history list
.TP
\fBA-k:\fR Change to the next directory in the directory history list
.TP
\fBF10:\fR Open the configuration file
.TP
Some (and even all) of these keybindings might not work in some terminals, though they do work fine on the console (TTY), xvt-like terminal emulators like Urxvt and Aterm, and xterm-like ones.
.TP
CliFM will create HOME/.Xresources, if it doesn't already exist, for these keybindings to work correctly.

.SH COLOR CODES
.TP
Filetype colors are specified using the same format used by dircolors and the LS_COLORS environment variable, namely, a colon separated list of codes with this format: filetype=color. This is the list of filetype codes:
 di = directory
 ed = empty directory
 nd = directory with no read permission
 ne = empty directory with no read permission
 fi = regular file
 ef = empty regular file
 nf = file with no access permission
 ln = symlink
 or = orphaned or broken symlink
 bd = block device
 cd = character device
 pi = FIFO, pipe
 so = socket
 su = SUID file
 sg = SGID file
 tw = sticky and other writable directory
 st = sticky and not other writable directory
 ow = other writable directory
 ex = executable file
 ee = empty executable file
 ca = file with capabilites
 no = unknown filetype
.TP
Color codes are just traditional ANSI color codes less the escape character and the final 'm'. Thus, for instance, if you want non-empty directories to be bold blue, the complete code is this: di=01;34
.TP
Though by default CliFM uses only 8 colors, you can use 256 and RGB colors as well. Example: fi=04;38;02;245;76;00 will print regular files underlined and using a bold orange RGB or 24-bit true color.
.TP
Filetype colors are defined in the configuration file and can be modified as you wish. Prompt, ELN, and command line text colors are defined using these color codes as well.
.TP
To see a colored list of the currently used color codes run the 'colors' command in CliFM. 
.TP
The slash followed by a number (/xx) after directory names indicates the amount of files contained by the corresponding directory.

.SH THE PROMPT
.TP
CLiFM's prompt is just like any other standard terminal prompt, displaying the username, the hostname, and the current working directory, ending with a dollar sign ($) if the current user is a normal user, and with a hash sign (#) if it is rather the root user. 
.TP
A bold green asterisk at the left of the prompt indicates that there are elements in the Selection Box. In the same way, a yellow 'T' notices that there are currently files in the trash can. Finally, CliFM makes use of three kind of messages: errors (a red 'E' at the left of the prompt), warnings (a yellow 'W'), and simple notices (a green 'N').

.SH NOTES
.TP
It depends on the terminal emulator you use to correctly display non-ASCII characters and characters from the extended ASCII charset. If, for example, you create a file named "ñandú" (the spanish word for 'rhea'), it will be correctly displayed by the Linux console, Lxterminal, and Urxvt, but not thus by Xterm or Aterm.
.TP
CliFM is not limited to its own set of internal commands, like open, sel, trash, etc., but it can run any external command as well, provided external commands are allowed (use the -x option or the configuration file). By beginning the external command by a colon or a semicolon (':', ';') you tell CliFM not to parse the input string, but instead letting this task to the system shell, say Bash. However, bear in mind that CliFM is not intended to be used as a shell, but as the file manager it is.
.TP
Besides the default TAB completion for command names and paths, you can also expand ELN's using the TAB key. Example: type 'o 12', press TAB, and it becomes 'o filename ', or, if 12 refers to a directory, 'o dir/'. CliFM uses a Bash-style quoting system, so that this filename: "this is a test@version{1}" is expanded as follows: this\\ is\\ a\\ test\\@version\\{1\\}
.TP
CliFM will automatically expand the 'sel' keyword: 'sel' indeed amounts to 'file1 file2 file3 ...' In this way, you can use the 'sel' keyword with any command. If you want to set the executable bit on several files, for instance, simply select the files you want and then run this command: 'chmod +x sel'. Or, if you want to copy or move several files into some directory: 'cp sel 12', or 'mv sel 12' (provided the ELN 12 corresponds to a directory), respectivelly. If the destiny directory is ommited, selected files are copied into the current working directory, that is to say, 'mv sel' amounts to 'mv sel .'. To trash or remove selected files, simply run 'tr sel' or 'rm sel' respectivelly.The same goes for wildcards and braces: 'chmod +x *', for example, will set the excutable bit on all files in the current working directory, while 'chmod +x file{1,2,3}' will do it for file1, file2, and file3 respectivelly.
.TP
ELN's and ELN ranges will be also automatically expanded, provided the corresponding ELN's actually exist, that is to say, provided some filename is listed on the screen under those numbers. For example: 'diff 1 118' will only expand '1', but not '118', if there is no ELN 118. In the same way, the range 1-118 will only be expanded provided there are 118 or more elements listed on the screen. If this feature somehow conflicts with the command you want to run, say, 'chmod 644 ...', because the current amount of files is equal or larger than 644 (in which case CliFM will expand that number), then you can simply run the command as external: ';chmod 644...'
.TP
Of course, combinations of all these features is also possbile. Example: 'cp sel file* 2 23-31 .' will copy all selected files, plus all files whose name starts with "file", plus those files corresponding to the ELN's 2 and 23 through 31, into the current working directory.
.TP
When dealing with filenames containing spaces, you can use both single and double quotes (ex: "this file" or 'this file') plus escape sequences (ex: this\\ file).
.TP
By default, CliFM starts in the current working directory. However, you can always specify a different path by passing it as an argument. Ex: clifm -p /home/user/misc. You can also permanently set up the starting path in the CliFM configuration file.

.SH FILES
.TP
\fBMain configuration file:\fR \fI~/.config/clifm/profile_name/clifmrc\fR
Here you can permanently set up CliFM options, add aliases and some prompt commands (which will be executed imediately before each new prompt line). Just recall that in order to use prompt commands you must allow the use of external commands. See the 'ext' command above.
.TP
\fBProfile file:\fR \fI~/.config/clifm/profile_name/clifm_profile\fR
In this file you can add those commands you want to be executed at startup. You can also permanently set here some custom variables, ex: 'dir="/path/to/folder"'. This variable may be used as a shorcut to that folder, for instance: 'cd $dir'. Custom variables could also be temporarily defined via the command prompt: Ex: user@hostname ~ $ var="This is a test". Temporary variables will be removed at program exit.
.TP
\fBMIME list file:\fR \fI~/.config/clifm/profile_name/mimelist.cfm\fR
A list of filetypes and file extensions and their associated applications used by CliFM built-in resource opener.
.TP
\fBBookmarks file:\fR \fI~/.config/clifm/profile_name/bookmarks.cfm\fR
Just the list of the user's bookmarks used by the bookmarks function.
.TP
\fBHistory file:\fR \fI~/.config/clifm/profile_name/history.cfm\fR
A list of commands entered by the user and used by the history function.
.TP
\fBCommands log file:\fR \fI~/.config/clifm/profile_name/log.cfm\fR
The file contains a series of fields separated by a colon in the following way: 'date:user:current_dir:command. All commands executed as external will be logged.
.TP
\fBMessages log file:\fR \fI~/.config.clifm/profile_name/messages.cfm\fR
A file containing a list of system messages, either errors, warnings, or simple notices. The messages log format is: [date] message.

.SH AUTHOR
L.M. Abramovich (https://github.com/leo-arch)

.SH BUG REPORTS
johndoe.arch@outlook.com
